codes:
  - name: Javascript
    ext: javascript
    snippet: |
      ```javascript
      const Gtk = imports.gi.Gtk;

      // Create a new application
      let app = new Gtk.Application({ application_id: 'com.example.GtkApplication' });

      // When the application is launched…
      app.connect('activate', () => {
          // … create a new window …
          let win = new Gtk.ApplicationWindow({ application: app });
          // … with a button in it …
          let btn = new Gtk.Button({ label: 'Hello, World!' });
          // … which closes the window when clicked
          btn.connect('clicked', () => { win.destroy(); });
          win.add(btn);
          win.show_all();
      });

      // Run the application
      app.run([]);
      ```
  - name: Python
    ext: py
    snippet: |
      ```python
      from gi.repository import Gtk

      def on_activate(app):
          win = Gtk.ApplicationWindow(application=app)
          btn = Gtk.Button(label='Hello, World!')
          btn.connect('clicked', lambda x: win.destroy())
          win.add(btn)
          win.show_all()

      app = Gtk.Application(application_id='com.example.GtkApplication')
      app.connect('activate', on_activate)
      app.run(None)
      ```
  - name: C
    ext: c
    snippet: |
      ```cpp
      #include <gtk/gtk.h>
      static void on_clicked (GtkButton *button, GtkWidget *window) {
        gtk_widget_destroy (window);
      }

      static void on_activate (GtkApplication *app) {
        GtkWidget *window = gtk_application_window_new (app);
        GtkWidget *button = gtk_button_new_with_label ("Hello, World!");
        g_signal_connect (button, "clicked", G_CALLBACK (on_clicked), window);
        gtk_container_add (GTK_CONTAINER (window), button);
        gtk_widget_show_all (window);
      }

      int main (int argc, char *argv[]) {
        GtkApplication *app = gtk_application_new ("com.example.GtkApplication",
                                                   G_APPLICATION_FLAGS_NONE);
        g_signal_connect (app, "activate", G_CALLBACK (on_activate), NULL);
        return g_application_run (argc, argv);
      }
      ```
